{"ast":null,"code":"import { ADD_FAVORITES, DELETE_FAVORITE, FILTER, ORDER } from \"./actions-types\";\nconst initialState = {\n  myFavorites: [],\n  allCharacters: [],\n  genders: []\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FAVORITES:\n      const copyCharacters = [...state.allCharacters, action.payload];\n      return {\n        ...state,\n        myFavorites: copyCharacters,\n        allCharacters: [...copyCharacters]\n      };\n    case DELETE_FAVORITE:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(character => character.id !== action.payload)\n      };\n    case FILTER:\n      // [ {C: M}, {C: M}, {C: F}]\n      // [{C: M}, { C: M}]\n      const filterCharacter = state.allCharacters.filter(character => character.gender === action.payload);\n      return {\n        ...state,\n        myFavorites: filterCharacter\n      };\n    case ORDER:\n      // [{id: 1}, {id: 6}, {id: 8}]\n      //      a       b\n\n      const orderCharacter = state.allCharacters.sort((a, b) => {\n        if (action.payload === 'Ascendente') {\n          if (a.id < b.id) return -1;\n          if (b.id < a.id) return 1;\n          //si son iguales\n          return 0;\n        }\n        // Descendente\n        else {\n          if (a.id < b.id) return 1;\n          if (b.id < a.id) return -1;\n          //si son iguales\n          return 0;\n        }\n      });\n      return {\n        ...state,\n        myFavorites: [...orderCharacter]\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_FAVORITES","DELETE_FAVORITE","FILTER","ORDER","initialState","myFavorites","allCharacters","genders","reducer","state","action","type","copyCharacters","payload","filter","character","id","filterCharacter","gender","orderCharacter","sort","a","b"],"sources":["/Users/Work/GIT/R & M FINAL/rick_and_morty/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAVORITES, DELETE_FAVORITE, FILTER, ORDER } from \"./actions-types\";\r\n\r\nconst initialState = {\r\n    myFavorites: [],\r\n    allCharacters : [],\r\n    genders: []\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_FAVORITES:\r\n            \r\n            const copyCharacters = [...state.allCharacters, action.payload]\r\n\r\n            return {\r\n                ...state,\r\n                myFavorites: copyCharacters,\r\n                allCharacters: [...copyCharacters]\r\n            }\r\n            \r\n        case DELETE_FAVORITE: \r\n        return {\r\n            ...state,\r\n            myFavorites: state.myFavorites.filter((character)=> character.id !== action.payload )\r\n        }\r\n\r\n        case FILTER :\r\n            // [ {C: M}, {C: M}, {C: F}]\r\n            // [{C: M}, { C: M}]\r\n            const filterCharacter = state.allCharacters.filter((character)=> character.gender === action.payload )\r\n            return {\r\n                ...state,\r\n                myFavorites: filterCharacter,\r\n            }\r\n\r\n\r\n        case ORDER:\r\n            // [{id: 1}, {id: 6}, {id: 8}]\r\n            //      a       b\r\n\r\n            const orderCharacter = state.allCharacters.sort((a, b) => {\r\n                if(action.payload === 'Ascendente') {\r\n                    if(a.id < b.id) return -1\r\n                    if(b.id < a.id) return 1\r\n                    //si son iguales\r\n                    return 0\r\n                }\r\n                // Descendente\r\n                else {\r\n                    if(a.id < b.id) return 1\r\n                    if(b.id < a.id) return -1\r\n                    //si son iguales\r\n                    return 0\r\n                }\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                myFavorites: [...orderCharacter]\r\n            }\r\n    \r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer"],"mappings":"AAAA,SAASA,aAAa,EAAEC,eAAe,EAAEC,MAAM,EAAEC,KAAK,QAAQ,iBAAiB;AAE/E,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAG,EAAE;EAClBC,OAAO,EAAE;AACb,CAAC;AAGD,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKX,aAAa;MAEd,MAAMY,cAAc,GAAG,CAAC,GAAGH,KAAK,CAACH,aAAa,EAAEI,MAAM,CAACG,OAAO,CAAC;MAE/D,OAAO;QACH,GAAGJ,KAAK;QACRJ,WAAW,EAAEO,cAAc;QAC3BN,aAAa,EAAE,CAAC,GAAGM,cAAc;MACrC,CAAC;IAEL,KAAKX,eAAe;MACpB,OAAO;QACH,GAAGQ,KAAK;QACRJ,WAAW,EAAEI,KAAK,CAACJ,WAAW,CAACS,MAAM,CAAEC,SAAS,IAAIA,SAAS,CAACC,EAAE,KAAKN,MAAM,CAACG,OAAQ;MACxF,CAAC;IAED,KAAKX,MAAM;MACP;MACA;MACA,MAAMe,eAAe,GAAGR,KAAK,CAACH,aAAa,CAACQ,MAAM,CAAEC,SAAS,IAAIA,SAAS,CAACG,MAAM,KAAKR,MAAM,CAACG,OAAQ,CAAC;MACtG,OAAO;QACH,GAAGJ,KAAK;QACRJ,WAAW,EAAEY;MACjB,CAAC;IAGL,KAAKd,KAAK;MACN;MACA;;MAEA,MAAMgB,cAAc,GAAGV,KAAK,CAACH,aAAa,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACtD,IAAGZ,MAAM,CAACG,OAAO,KAAK,YAAY,EAAE;UAChC,IAAGQ,CAAC,CAACL,EAAE,GAAGM,CAAC,CAACN,EAAE,EAAE,OAAO,CAAC,CAAC;UACzB,IAAGM,CAAC,CAACN,EAAE,GAAGK,CAAC,CAACL,EAAE,EAAE,OAAO,CAAC;UACxB;UACA,OAAO,CAAC;QACZ;QACA;QAAA,KACK;UACD,IAAGK,CAAC,CAACL,EAAE,GAAGM,CAAC,CAACN,EAAE,EAAE,OAAO,CAAC;UACxB,IAAGM,CAAC,CAACN,EAAE,GAAGK,CAAC,CAACL,EAAE,EAAE,OAAO,CAAC,CAAC;UACzB;UACA,OAAO,CAAC;QACZ;MACJ,CAAC,CAAC;MAEF,OAAO;QACH,GAAGP,KAAK;QACRJ,WAAW,EAAE,CAAC,GAAGc,cAAc;MACnC,CAAC;IAEL;MACI,OAAO;QACH,GAAGV;MACP,CAAC;EACT;AACJ,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}