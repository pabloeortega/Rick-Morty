{"ast":null,"code":"const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\nconst regexPassword = /^(?=.*?[a-z])(?=.*?[0-9]).{6,10}$/;\n;\nexport const validate = userData => {\n  let errors = {};\n  if (!regexEmail.test(userData.username)) {\n    errors.username = 'El username debe ser un email valido';\n  } else if (!userData.username) {\n    errors.username = 'El nombre del usuario no puede estar vacio';\n  } else if (userData.username.length > 35) {\n    errors.username = 'El nombre de usuario nmo puede tener mas de 35 caracteres';\n  }\n  if (!regexPassword.test(userData.password)) {\n    errors.password = 'La contraseña tiene que tener al menos un número';\n  }\n  if (userData.password.length < 6 && userData.password > 10) {\n    errors.password = 'la contraseña tiene que tener una longitud entre 6 y 10 caracteres.';\n  }\n  return errors;\n};","map":{"version":3,"names":["regexEmail","regexPassword","validate","userData","errors","test","username","length","password"],"sources":["/Users/Work/GIT/R & M FINAL/rick_and_morty/Client/src/components/Form/validation.js"],"sourcesContent":["const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\nconst regexPassword =  /^(?=.*?[a-z])(?=.*?[0-9]).{6,10}$/;;\r\n\r\n\r\nexport const validate = (userData)=> {\r\n    let errors = {}\r\n\r\n    if(!regexEmail.test(userData.username)) {\r\n        errors.username = 'El username debe ser un email valido'\r\n    }\r\n    else if (!userData.username) {\r\n        errors.username = 'El nombre del usuario no puede estar vacio'\r\n    }\r\n    else if(userData.username.length > 35) {\r\n        errors.username = 'El nombre de usuario nmo puede tener mas de 35 caracteres'\r\n    }\r\n    \r\n    if(!regexPassword.test(userData.password)) {\r\n        errors.password = 'La contraseña tiene que tener al menos un número'\r\n    }\r\n\r\n    if(userData.password.length < 6 && userData.password > 10) {\r\n        errors.password = 'la contraseña tiene que tener una longitud entre 6 y 10 caracteres.'\r\n    }\r\n    \r\n    return errors\r\n}"],"mappings":"AAAA,MAAMA,UAAU,GAAG,2CAA2C;AAC9D,MAAMC,aAAa,GAAI,mCAAmC;AAAC;AAG3D,OAAO,MAAMC,QAAQ,GAAIC,QAAQ,IAAI;EACjC,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAG,CAACJ,UAAU,CAACK,IAAI,CAACF,QAAQ,CAACG,QAAQ,CAAC,EAAE;IACpCF,MAAM,CAACE,QAAQ,GAAG,sCAAsC;EAC5D,CAAC,MACI,IAAI,CAACH,QAAQ,CAACG,QAAQ,EAAE;IACzBF,MAAM,CAACE,QAAQ,GAAG,4CAA4C;EAClE,CAAC,MACI,IAAGH,QAAQ,CAACG,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAE;IACnCH,MAAM,CAACE,QAAQ,GAAG,2DAA2D;EACjF;EAEA,IAAG,CAACL,aAAa,CAACI,IAAI,CAACF,QAAQ,CAACK,QAAQ,CAAC,EAAE;IACvCJ,MAAM,CAACI,QAAQ,GAAG,kDAAkD;EACxE;EAEA,IAAGL,QAAQ,CAACK,QAAQ,CAACD,MAAM,GAAG,CAAC,IAAIJ,QAAQ,CAACK,QAAQ,GAAG,EAAE,EAAE;IACvDJ,MAAM,CAACI,QAAQ,GAAG,qEAAqE;EAC3F;EAEA,OAAOJ,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}